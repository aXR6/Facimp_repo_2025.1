#!/bin/bash

# Verifica se o script está sendo executado como root
if [ "$(id -u)" -ne 0 ]; then
    echo "Este script deve ser executado como root."
    exit 1
fi

# Lista as interfaces disponíveis
interfaces=$(ip -o link show | awk -F': ' '{print $2}')
echo "Interfaces de rede disponíveis:"
select INTERFACE in $interfaces; do
    if [ -n "$INTERFACE" ]; then
        break
    else
        echo "Seleção inválida. Tente novamente."
    fi
done

# Tempo de captura
read -p "Digite o tempo de captura em segundos (pressione Enter para contínuo): " CAPTURE_TIME

# Diretório e log
LOG_DIR="/var/log/tcpdump_monitor"
mkdir -p "$LOG_DIR"

# Cabeçalho
print_header() {
    echo "-----------------------------------------------------------------------------------------------------------"
    printf "| %-19s | %-15s | %-6s | %-20s | %-50s |\n" "Timestamp" "IP Origem" "Método" "Host" "URL/Credenciais"
    echo "-----------------------------------------------------------------------------------------------------------"
}

# Linha da tabela
print_line() {
    printf "| %-19s | %-15s | %-6s | %-20s | %-50s |\n" "$1" "$2" "$3" "$4" "$5"
}

# Menu
menu_principal() {
    clear
    echo "========================================="
    echo "   Monitoramento de Rede com tcpdump"
    echo "========================================="
    echo "1. Capturar requisições HTTP GET e POST"
    echo "2. Extrair URLs de requisições HTTP"
    echo "3. Capturar credenciais em requisições POST"
    echo "4. Sair"
    echo "========================================="
    read -p "Escolha uma opção: " opcao
}

# Loop principal
while true; do
    menu_principal

    TIMESTAMP=$(date +'%Y%m%d_%H%M%S')
    LOG_FILE="$LOG_DIR/captura_${TIMESTAMP}.log"

    case $opcao in
        1)
            echo "Capturando HTTP GET e POST..."
            FILTER="tcp port 80"
            ;;
        2)
            echo "Extraindo URLs..."
            FILTER="tcp port 80"
            ;;
        3)
            echo "Capturando possíveis credenciais..."
            FILTER="tcp port 80"
            ;;
        4)
            echo "Saindo..."
            exit 0
            ;;
        *)
            echo "Opção inválida. Tente novamente."
            continue
            ;;
    esac

    TCPDUMP_CMD="tcpdump -i $INTERFACE -s 0 -A -l -nn -tttt -B 4096 $FILTER"

    print_header

    if [ -n "$CAPTURE_TIME" ]; then
        timeout "$CAPTURE_TIME" $TCPDUMP_CMD 2>/dev/null | \
        awk '
        /GET \/|POST \// {
            ts=strftime("%Y-%m-%d %H:%M:%S");
            split($0, a, " ");
            method=a[1]; url=a[2]; ip=$3;
            host=""; creds="";
        }
        /Host:/ {
            host=$2;
        }
        /pass=|user=|login=|senha=|pwd=|password=/ {
            creds=$0;
        }
        /^$/ && url != "" {
            printf("| %-19s | %-15s | %-6s | %-20s | %-50s |\n", ts, ip, method, host, (creds ? creds : url));
            method=""; url=""; host=""; creds="";
        }
        ' | tee -a "$LOG_FILE"
    else
        $TCPDUMP_CMD 2>/dev/null | \
        awk '
        /GET \/|POST \// {
            ts=strftime("%Y-%m-%d %H:%M:%S");
            split($0, a, " ");
            method=a[1]; url=a[2]; ip=$3;
            host=""; creds="";
        }
        /Host:/ {
            host=$2;
        }
        /pass=|user=|login=|senha=|pwd=|password=/ {
            creds=$0;
        }
        /^$/ && url != "" {
            printf("| %-19s | %-15s | %-6s | %-20s | %-50s |\n", ts, ip, method, host, (creds ? creds : url));
            method=""; url=""; host=""; creds="";
        }
        ' | tee -a "$LOG_FILE"
    fi

    echo
    echo "Captura salva em: $LOG_FILE"
    read -p "Pressione Enter para voltar ao menu..."
done