#!/bin/bash

# Verifica se o script está sendo executado com privilégios de superusuário
if [ "$(id -u)" -ne 0 ]; then
    echo "Este script deve ser executado com privilégios de superusuário (root)."
    exit 1
fi

# Função para exibir o menu principal
menu_principal() {
    clear
    echo "========================================="
    echo "   Monitoramento de Rede com tcpdump"
    echo "========================================="
    echo "1. Capturar requisições HTTP GET e POST"
    echo "2. Extrair URLs de requisições HTTP"
    echo "3. Capturar credenciais em requisições HTTP POST"
    echo "4. Sair"
    echo "========================================="
    read -p "Escolha uma opção: " opcao
}

# Lista as interfaces de rede disponíveis
interfaces=$(ip -o link show | awk -F': ' '{print $2}')
echo "Interfaces de rede disponíveis:"
select INTERFACE in $interfaces; do
    if [ -n "$INTERFACE" ]; then
        break
    else
        echo "Seleção inválida. Por favor, escolha uma opção válida."
    fi
done

# Solicita ao usuário o tempo de captura em segundos
read -p "Digite o tempo de captura em segundos (ou pressione Enter para captura contínua): " CAPTURE_TIME

# Diretório para armazenar os logs
LOG_DIR="/var/log/tcpdump_monitor"
mkdir -p "$LOG_DIR"

# Loop principal do menu
while true; do
    menu_principal
    case $opcao in
        1)
            # Captura de requisições HTTP GET e POST
            echo "Iniciando captura de requisições HTTP GET e POST..."
            FILTERS="tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x47455420 or tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x504f5354"
            LOG_FILE="$LOG_DIR/http_get_post_$(date +'%Y%m%d_%H%M%S').log"
            ;;
        2)
            # Extração de URLs de requisições HTTP
            echo "Iniciando extração de URLs de requisições HTTP..."
            FILTERS="port http"
            LOG_FILE="$LOG_DIR/http_urls_$(date +'%Y%m%d_%H%M%S').log"
            ;;
        3)
            # Captura de credenciais em requisições HTTP POST
            echo "Iniciando captura de credenciais em requisições HTTP POST..."
            FILTERS="port http"
            LOG_FILE="$LOG_DIR/http_post_credentials_$(date +'%Y%m%d_%H%M%S').log"
            ;;
        4)
            echo "Saindo..."
            exit 0
            ;;
        *)
            echo "Opção inválida. Tente novamente."
            continue
            ;;
    esac

    # Comando tcpdump com as opções especificadas
    TCPDUMP_CMD="tcpdump -i \"$INTERFACE\" -l -A -s 0 -X -p -n $FILTERS"

    # Inicia o tcpdump para capturar pacotes conforme a opção selecionada
    if [ -n "$CAPTURE_TIME" ]; then
        timeout "$CAPTURE_TIME" bash -c "$TCPDUMP_CMD" 2>/dev/null | tee "$LOG_FILE"
    else
        bash -c "$TCPDUMP_CMD" 2>/dev/null | tee "$LOG_FILE"
    fi

    echo "Captura concluída. Os resultados foram salvos em $LOG_FILE"
    read -p "Pressione Enter para voltar ao menu principal..."
done